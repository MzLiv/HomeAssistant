blueprint:
  name: MQTT - Topic-Based Advanced Button Controller
  description: >-
    Triggers actions based on the payload of a specific MQTT topic.
    Use this if your MQTT device doesn't appear in the Device list or if its triggers aren't detected.
  domain: automation
  input:
    mqtt_topic:
      name: MQTT Action Topic
      description: "The MQTT topic to listen to. For Zigbee2MQTT, this is usually 'zigbee2mqtt/YOUR_DEVICE_NAME/action'."
      selector:
        text:

    # === LEFT BUTTON ACTIONS ===
    action_single_left:
      name: (Left) Single Press
      description: Action to run when payload is 'single_left'.
      selector: { action: {} }
      default: []
    action_single_left_down:
      name: (Left) Single Press Down
      description: Action to run when payload is 'single_left_down'.
      selector: { action: {} }
      default: []
    action_double_left_down:
      name: (Left) Double Press Down
      description: Action to run when payload is 'double_left_down'.
      selector: { action: {} }
      default: []
    action_hold_left_down:
      name: (Left) Hold
      description: Action to run when payload is 'hold_left_down'.
      selector: { action: {} }
      default: []
    action_release_left_down:
      name: (Left) Release
      description: Action to run when payload is 'release_left_down'.
      selector: { action: {} }
      default: []

    # === RIGHT BUTTON ACTIONS ===
    action_single_right:
      name: (Right) Single Press
      description: Action to run when payload is 'single_right'.
      selector: { action: {} }
      default: []
    action_single_right_down:
      name: (Right) Single Press Down
      description: Action to run when payload is 'single_right_down'.
      selector: { action: {} }
      default: []
    action_double_right_down:
      name: (Right) Double Press Down
      description: Action to run when payload is 'double_right_down'.
      selector: { action: {} }
      default: []
    action_hold_right_down:
      name: (Right) Hold
      description: Action to run when payload is 'hold_right_down'.
      selector: { action: {} }
      default: []
    action_release_right_down:
      name: (Right) Release
      description: Action to run when payload is 'release_right_down'.
      selector: { action: {} }
      default: []

mode: restart

trigger:
  - platform: mqtt
    topic: !input mqtt_topic

action:
  - choose:
      # We check the trigger's payload for the action name
      - conditions: "{{ trigger.payload == 'single_left' }}"
        sequence: !input action_single_left
      - conditions: "{{ trigger.payload == 'single_right' }}"
        sequence: !input action_single_right
      - conditions: "{{ trigger.payload == 'single_left_down' }}"
        sequence: !input action_single_left_down
      - conditions: "{{ trigger.payload == 'single_right_down' }}"
        sequence: !input action_single_right_down
      - conditions: "{{ trigger.payload == 'double_left_down' }}"
        sequence: !input action_double_left_down
      - conditions: "{{ trigger.payload == 'double_right_down' }}"
        sequence: !input action_double_right_down
      - conditions: "{{ trigger.payload == 'hold_left_down' }}"
        sequence: !input action_hold_left_down
      - conditions: "{{ trigger.payload == 'hold_right_down' }}"
        sequence: !input action_hold_right_down
      - conditions: "{{ trigger.payload == 'release_left_down' }}"
        sequence: !input action_release_left_down
      - conditions: "{{ trigger.payload == 'release_right_down' }}"
        sequence: !input action_release_right_down
