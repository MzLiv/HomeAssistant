blueprint:
  name: MQTT - 4 Button H2 Switch Controller
  description: >-
    Control anything with a 4-button switch using MQTT Device Triggers.
  domain: automation
  input:
    # --- The Device Selector ---
    # This is the part we need to get right.
    # Try with this standard version first.
    device:
      name: MQTT Device
      description: Select your 4-button switch from the list.
      selector:
        device:
          integration: mqtt

    # --- ACTION INPUTS ---
    # I have simplified the list to match the H2 switch's known actions.
    # It has 4 buttons, each with single, double, and hold. Release is often part of hold.

    # Button 1 (Top-Left)
    action_single_1:
      name: (Button 1) Single Press
      selector: { action: {} }
      default: []
    action_double_1:
      name: (Button 1) Double Press
      selector: { action: {} }
      default: []
    action_hold_1:
      name: (Button 1) Hold
      selector: { action: {} }
      default: []

    # Button 2 (Top-Right)
    action_single_2:
      name: (Button 2) Single Press
      selector: { action: {} }
      default: []
    action_double_2:
      name: (Button 2) Double Press
      selector: { action: {} }
      default: []
    action_hold_2:
      name: (Button 2) Hold
      selector: { action: {} }
      default: []

    # Button 3 (Bottom-Left)
    action_single_3:
      name: (Button 3) Single Press
      selector: { action: {} }
      default: []
    action_double_3:
      name: (Button 3) Double Press
      selector: { action: {} }
      default: []
    action_hold_3:
      name: (Button 3) Hold
      selector: { action: {} }
      default: []

    # Button 4 (Bottom-Right)
    action_single_4:
      name: (Button 4) Single Press
      selector: { action: {} }
      default: []
    action_double_4:
      name: (Button 4) Double Press
      selector: { action: {} }
      default: []
    action_hold_4:
      name: (Button 4) Hold
      selector: { action: {} }
      default: []

mode: restart
max_exceeded: silent

# The action subtypes for this switch are often button_1_single, button_2_double, etc.
# I have built the triggers to match that common pattern.
trigger:
  # Button 1
  - { platform: device, device_id: !input mqtt_device, domain: mqtt, type: action, subtype: "button_1_single", id: single_1 }
  - { platform: device, device_id: !input mqtt_device, domain: mqtt, type: action, subtype: "button_1_double", id: double_1 }
  - { platform: device, device_id: !input mqtt_device, domain: mqtt, type: action, subtype: "button_1_hold", id: hold_1 }
  # Button 2
  - { platform: device, device_id: !input mqtt_device, domain: mqtt, type: action, subtype: "button_2_single", id: single_2 }
  - { platform: device, device_id: !input mqtt_device, domain: mqtt, type: action, subtype: "button_2_double", id: double_2 }
  - { platform: device, device_id: !input mqtt_device, domain: mqtt, type: action, subtype: "button_2_hold", id: hold_2 }
  # Button 3
  - { platform: device, device_id: !input mqtt_device, domain: mqtt, type: action, subtype: "button_3_single", id: single_3 }
  - { platform: device, device_id: !input mqtt_device, domain: mqtt, type: action, subtype: "button_3_double", id: double_3 }
  - { platform: device, device_id: !input mqtt_device, domain: mqtt, type: action, subtype: "button_3_hold", id: hold_3 }
  # Button 4
  - { platform: device, device_id: !input mqtt_device, domain: mqtt, type: action, subtype: "button_4_single", id: single_4 }
  - { platform: device, device_id: !input mqtt_device, domain: mqtt, type: action, subtype: "button_4_double", id: double_4 }
  - { platform: device, device_id: !input mqtt_device, domain: mqtt, type: action, subtype: "button_4_hold", id: hold_4 }

action:
  - choose:
      # Button 1
      - conditions: "{{ trigger.id == 'single_1' }}", sequence: !input action_single_1
      - conditions: "{{ trigger.id == 'double_1' }}", sequence: !input action_double_1
      - conditions: "{{ trigger.id == 'hold_1' }}", sequence: !input action_hold_1
      # Button 2
      - conditions: "{{ trigger.id == 'single_2' }}", sequence: !input action_single_2
      - conditions: "{{ trigger.id == 'double_2' }}", sequence: !input action_double_2
      - conditions: "{{ trigger.id == 'hold_2' }}", sequence: !input action_hold_2
      # Button 3
      - conditions: "{{ trigger.id == 'single_3' }}", sequence: !input action_single_3
      - conditions: "{{ trigger.id == 'double_3' }}", sequence: !input action_double_3
      - conditions: "{{ trigger.id == 'hold_3' }}", sequence: !input action_hold_3
      # Button 4
      - conditions: "{{ trigger.id == 'single_4' }}", sequence: !input action_single_4
      - conditions: "{{ trigger.id == 'double_4' }}", sequence: !input action_double_4
      - conditions: "{{ trigger.id == 'hold_4' }}", sequence: !input action_hold_4

